plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}


group = 'Blaybus'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

jar {
	enabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	ext {
		JJWT_VERSION = "0.12.5"
	}

	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	implementation 'com.google.http-client:google-http-client:1.41.1'
	implementation 'com.google.apis:google-api-services-people:v1-rev20220531-2.0.0'
	//implementation 'com.google.apis:google-api-services-calendar:v3-rev411-1.18.0-rc'
//	implementation 'com.google.apis:google-api-services-calendar:v3-rev411-1.25.0'
	implementation 'com.google.apis:google-api-services-calendar:v3-rev378-1.25.0'
	implementation 'com.google.auth:google-auth-library-oauth2-http:1.15.0'
	implementation 'com.google.oauth-client:google-oauth-client-jetty:1.33.0'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	implementation "org.projectlombok:lombok-mapstruct-binding:0.2.0"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.5.3.Final"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.5.3.Final"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation "org.mapstruct:mapstruct:1.5.3.Final"
	implementation 'com.google.oauth-client:google-oauth-client:1.34.0'
	implementation 'com.google.api-client:google-api-client:1.34.0'
	implementation 'com.google.http-client:google-http-client-jackson2:1.40.1'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'


	implementation "org.projectlombok:lombok-mapstruct-binding:0.2.0"
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	implementation 'com.mysql:mysql-connector-j'
	implementation 'org.mapstruct:mapstruct:1.5.2.Final' // MapStruct
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final' // MapStruct Processor
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation "org.projectlombok:lombok-mapstruct-binding:0.2.0"

	ext {
		JJWT_VERSION = "0.12.5"
	}
	implementation("io.github.cdimascio:java-dotenv:5.2.2")
	implementation "io.jsonwebtoken:jjwt-api:${JJWT_VERSION}"
	runtimeOnly "io.jsonwebtoken:jjwt-gson:${JJWT_VERSION}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${JJWT_VERSION}"

	//querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"

	// csv 파싱
	implementation 'com.opencsv:opencsv:5.5.2'

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// aws
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

}

// [3] Querydsl 설정부
def generated = 'src/main/generated'

// [4] querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// [5] java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// [6] gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.compilerArgs << "-Amapstruct.verbose=true"  // Verbose mode 활성화
}
